//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataAccessLayers.DataBase
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class innovaEntities : DbContext
    {
        public innovaEntities()
            : base("name=innovaEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<C__EFMigrationsHistory> C__EFMigrationsHistory { get; set; }
        public DbSet<AdminUser> AdminUsers { get; set; }
        public DbSet<AppForm> AppForms { get; set; }
        public DbSet<Article> Articles { get; set; }
        public DbSet<ArticleCategory> ArticleCategories { get; set; }
        public DbSet<ArticleCategoryAssignment> ArticleCategoryAssignments { get; set; }
        public DbSet<AutoZoneStore> AutoZoneStores { get; set; }
        public DbSet<CarScanSession> CarScanSessions { get; set; }
        public DbSet<CarScanSession_OLD> CarScanSession_OLD { get; set; }
        public DbSet<changelog> changelogs { get; set; }
        public DbSet<CodemasterIDPart> CodemasterIDParts { get; set; }
        public DbSet<CodemasterIDPartLocation> CodemasterIDPartLocations { get; set; }
        public DbSet<Country> Countries { get; set; }
        public DbSet<CurrencyExchangeRate> CurrencyExchangeRates { get; set; }
        public DbSet<Device> Devices { get; set; }
        public DbSet<DiagnosticReport> DiagnosticReports { get; set; }
        public DbSet<DiagnosticReportExternalSystemReportId> DiagnosticReportExternalSystemReportIds { get; set; }
        public DbSet<DiagnosticReportFeedback> DiagnosticReportFeedbacks { get; set; }
        public DbSet<DiagnosticReportFixFeedback> DiagnosticReportFixFeedbacks { get; set; }
        public DbSet<DiagnosticReportFixFeedback_OLD> DiagnosticReportFixFeedback_OLD { get; set; }
        public DbSet<DiagnosticReportFixFeedbackPart> DiagnosticReportFixFeedbackParts { get; set; }
        public DbSet<DiagnosticReportMasterTechUser> DiagnosticReportMasterTechUsers { get; set; }
        public DbSet<DiagnosticReportMasterTechUser_OLD> DiagnosticReportMasterTechUser_OLD { get; set; }
        public DbSet<DiagnosticReportRawData> DiagnosticReportRawDatas { get; set; }
        public DbSet<DiagnosticReportResult> DiagnosticReportResults { get; set; }
        public DbSet<DiagnosticReportResult_Old> DiagnosticReportResult_Old { get; set; }
        public DbSet<DiagnosticReportResultErrorCode> DiagnosticReportResultErrorCodes { get; set; }
        public DbSet<DiagnosticReportResultErrorCodeDefinition> DiagnosticReportResultErrorCodeDefinitions { get; set; }
        public DbSet<DiagnosticReportResultFix> DiagnosticReportResultFixes { get; set; }
        public DbSet<DLCLocation> DLCLocations { get; set; }
        public DbSet<DTCCode> DTCCodes { get; set; }
        public DbSet<DTCCodeLaymanTerm> DTCCodeLaymanTerms { get; set; }
        public DbSet<DTCCodeLaymanTermSeverityDefinition> DTCCodeLaymanTermSeverityDefinitions { get; set; }
        public DbSet<DTCEngineType> DTCEngineTypes { get; set; }
        public DbSet<DTCEngineVINCode> DTCEngineVINCodes { get; set; }
        public DbSet<DTCMake> DTCMakes { get; set; }
        public DbSet<DTCMasterCodeList> DTCMasterCodeLists { get; set; }
        public DbSet<DTCMasterCodeMake> DTCMasterCodeMakes { get; set; }
        public DbSet<DTCModel> DTCModels { get; set; }
        public DbSet<DTCTransmission> DTCTransmissions { get; set; }
        public DbSet<DTCTrimLevel> DTCTrimLevels { get; set; }
        public DbSet<DTCYear> DTCYears { get; set; }
        public DbSet<ExternalSystem> ExternalSystems { get; set; }
        public DbSet<Fix> Fixes { get; set; }
        public DbSet<FixComment> FixComments { get; set; }
        public DbSet<FixCommentUserLastViewed> FixCommentUserLastVieweds { get; set; }
        public DbSet<FixDTC> FixDTCs { get; set; }
        public DbSet<FixEngineType> FixEngineTypes { get; set; }
        public DbSet<FixEngineTypePolk> FixEngineTypePolks { get; set; }
        public DbSet<FixEngineTypeVinPower> FixEngineTypeVinPowers { get; set; }
        public DbSet<FixEngineVinCode> FixEngineVinCodes { get; set; }
        public DbSet<FixEngineVINCodeVinPower> FixEngineVINCodeVinPowers { get; set; }
        public DbSet<FixFrequencyCount> FixFrequencyCounts { get; set; }
        public DbSet<FixFrequencyCount_OLD> FixFrequencyCount_OLD { get; set; }
        public DbSet<FixGeneration> FixGenerations { get; set; }
        public DbSet<FixMake> FixMakes { get; set; }
        public DbSet<FixMakePolk> FixMakePolks { get; set; }
        public DbSet<FixMakeVinPower> FixMakeVinPowers { get; set; }
        public DbSet<FixModel> FixModels { get; set; }
        public DbSet<FixModelPolk> FixModelPolks { get; set; }
        public DbSet<FixModelVinPower> FixModelVinPowers { get; set; }
        public DbSet<FixName> FixNames { get; set; }
        public DbSet<FixNameArticleAssignment> FixNameArticleAssignments { get; set; }
        public DbSet<FixNameFragment> FixNameFragments { get; set; }
        public DbSet<FixPart> FixParts { get; set; }
        public DbSet<FixPolkVehicleDiscrepancy> FixPolkVehicleDiscrepancies { get; set; }
        public DbSet<FixPolkVehicleYmme> FixPolkVehicleYmmes { get; set; }
        public DbSet<FixSymptom> FixSymptoms { get; set; }
        public DbSet<FixTransmission> FixTransmissions { get; set; }
        public DbSet<FixTransmissionVinPower> FixTransmissionVinPowers { get; set; }
        public DbSet<FixTrimLevel> FixTrimLevels { get; set; }
        public DbSet<FixTrimLevelPolk> FixTrimLevelPolks { get; set; }
        public DbSet<FixTrimLevelVinPower> FixTrimLevelVinPowers { get; set; }
        public DbSet<FixYear> FixYears { get; set; }
        public DbSet<FixYearPolk> FixYearPolks { get; set; }
        public DbSet<FixYearVINPower> FixYearVINPowers { get; set; }
        public DbSet<FormPermissionByRole> FormPermissionByRoles { get; set; }
        public DbSet<LogManagement> LogManagements { get; set; }
        public DbSet<ManageSearchCount> ManageSearchCounts { get; set; }
        public DbSet<ObdFix> ObdFixes { get; set; }
        public DbSet<ObdFixPaymentSchedule> ObdFixPaymentSchedules { get; set; }
        public DbSet<Part> Parts { get; set; }
        public DbSet<PartMake> PartMakes { get; set; }
        public DbSet<PartName> PartNames { get; set; }
        public DbSet<PartOem> PartOems { get; set; }
        public DbSet<PolkVehicleU> PolkVehicleUS { get; set; }
        public DbSet<PolkVehicleUSManufacturerYearStat> PolkVehicleUSManufacturerYearStats { get; set; }
        public DbSet<PolkVehicleUSStat> PolkVehicleUSStats { get; set; }
        public DbSet<PolkVehicleUSStatsGrouped> PolkVehicleUSStatsGroupeds { get; set; }
        public DbSet<PolkVehicleYmme> PolkVehicleYmmes { get; set; }
        public DbSet<ProRSFix> ProRSFixes { get; set; }
        public DbSet<Recall> Recalls { get; set; }
        public DbSet<Region> Regions { get; set; }
        public DbSet<Role> Roles { get; set; }
        public DbSet<ScheduleMaintenanceFixNameVehicle> ScheduleMaintenanceFixNameVehicles { get; set; }
        public DbSet<ScheduleMaintenancePlan> ScheduleMaintenancePlans { get; set; }
        public DbSet<ScheduleMaintenancePlanDetail> ScheduleMaintenancePlanDetails { get; set; }
        public DbSet<ScheduleMaintenancePlanEngineType> ScheduleMaintenancePlanEngineTypes { get; set; }
        public DbSet<ScheduleMaintenancePlanEngineVINCode> ScheduleMaintenancePlanEngineVINCodes { get; set; }
        public DbSet<ScheduleMaintenancePlanMake> ScheduleMaintenancePlanMakes { get; set; }
        public DbSet<ScheduleMaintenancePlanModel> ScheduleMaintenancePlanModels { get; set; }
        public DbSet<ScheduleMaintenancePlanPolkVehicleYmme> ScheduleMaintenancePlanPolkVehicleYmmes { get; set; }
        public DbSet<ScheduleMaintenancePlanTransmission> ScheduleMaintenancePlanTransmissions { get; set; }
        public DbSet<ScheduleMaintenancePlanTrimLevel> ScheduleMaintenancePlanTrimLevels { get; set; }
        public DbSet<ScheduleMaintenancePlanYear> ScheduleMaintenancePlanYears { get; set; }
        public DbSet<ScheduleMaintenanceService> ScheduleMaintenanceServices { get; set; }
        public DbSet<ScheduleMaintenanceTransmission> ScheduleMaintenanceTransmissions { get; set; }
        public DbSet<StateLaborRate> StateLaborRates { get; set; }
        public DbSet<Symptom> Symptoms { get; set; }
        public DbSet<SymptomDiagnosticReportItem> SymptomDiagnosticReportItems { get; set; }
        public DbSet<SymptomFragment> SymptomFragments { get; set; }
        public DbSet<SystemEmail> SystemEmails { get; set; }
        public DbSet<TSB> TSBs { get; set; }
        public DbSet<TSBAAIAToLegacyVehicleID> TSBAAIAToLegacyVehicleIDs { get; set; }
        public DbSet<TSBDTC> TSBDTCs { get; set; }
        public DbSet<TSBToDTC> TSBToDTCs { get; set; }
        public DbSet<TSBToVehicle> TSBToVehicles { get; set; }
        public DbSet<User> Users { get; set; }
        public DbSet<UserRoleManager> UserRoleManagers { get; set; }
        public DbSet<UserStatusChange> UserStatusChanges { get; set; }
        public DbSet<Vehicle> Vehicles { get; set; }
        public DbSet<VehicleManufacturerAlternateName> VehicleManufacturerAlternateNames { get; set; }
        public DbSet<VehicleType> VehicleTypes { get; set; }
        public DbSet<VehicleTypeAltModel> VehicleTypeAltModels { get; set; }
        public DbSet<VehicleTypeCode> VehicleTypeCodes { get; set; }
        public DbSet<VehicleTypeCodeAssignment> VehicleTypeCodeAssignments { get; set; }
        public DbSet<VehicleWarranty> VehicleWarranties { get; set; }
        public DbSet<VehicleWarrantyDetail> VehicleWarrantyDetails { get; set; }
        public DbSet<VehicleWarrantyEngineType> VehicleWarrantyEngineTypes { get; set; }
        public DbSet<VehicleWarrantyMake> VehicleWarrantyMakes { get; set; }
        public DbSet<VehicleWarrantyModel> VehicleWarrantyModels { get; set; }
        public DbSet<FixCommentUserLastViewed_NEW> FixCommentUserLastViewed_NEW { get; set; }
        public DbSet<FixDTC_NEW> FixDTC_NEW { get; set; }
        public DbSet<FixEngineTypeVinPower_NEW> FixEngineTypeVinPower_NEW { get; set; }
        public DbSet<FixSymptom_NEW> FixSymptom_NEW { get; set; }
        public DbSet<DiagnosticReport_ByAbsDiagnosticReportFixStatus> DiagnosticReport_ByAbsDiagnosticReportFixStatus { get; set; }
        public DbSet<DiagnosticReport_ByObd1DiagnosticReportFixStatus> DiagnosticReport_ByObd1DiagnosticReportFixStatus { get; set; }
        public DbSet<DiagnosticReport_ByPwrDiagnosticReportFixStatus> DiagnosticReport_ByPwrDiagnosticReportFixStatus { get; set; }
        public DbSet<DiagnosticReport_ByUserIdAndCreatedDate> DiagnosticReport_ByUserIdAndCreatedDate { get; set; }
        public DbSet<DiagnosticReportFixFeedbackView> DiagnosticReportFixFeedbackViews { get; set; }
        public DbSet<DTCMasterCodeList_ByErrorCode> DTCMasterCodeList_ByErrorCode { get; set; }
        public DbSet<DTCMasterCodeList_ByManufacturerName> DTCMasterCodeList_ByManufacturerName { get; set; }
        public DbSet<FixPart_ByFix> FixPart_ByFix { get; set; }
        public DbSet<LoadByFixAndDtc_View> LoadByFixAndDtc_View { get; set; }
        public DbSet<PredictiveDiagnosticReportView> PredictiveDiagnosticReportViews { get; set; }
        public DbSet<Vehicle_ByUser> Vehicle_ByUser { get; set; }
        public DbSet<VehiclesWithScheduledMaintenanceRemindersView> VehiclesWithScheduledMaintenanceRemindersViews { get; set; }
    
        public virtual int DiagnosticReport_LoadNoFixReports(Nullable<bool> getCountOnly, string masterTechAssignedToUserId, string markets, Nullable<System.DateTime> startDateTimeUTC, Nullable<System.DateTime> endDateTimeUTC, string userTypes, string externalSystemXmlGuidList, Nullable<bool> includeReportsWithoutAFixPromiseDate, Nullable<bool> includeUnassignedReports, Nullable<bool> includeAssignedReports, Nullable<bool> includePowertrainReports, Nullable<bool> includeObd1Reports, Nullable<bool> includeAbsReports, Nullable<bool> includeSrsReports, string adminUserId_WorkingOnFix, Nullable<bool> includeAdminUserWorkingOnFix, Nullable<bool> includeReportsWithFeedback, Nullable<System.DateTime> startFixPromiseDateTimeUTC, Nullable<System.DateTime> endFixPromiseDateTimeUTC, Nullable<bool> excludeReportsWithPastDueEmailSentDate)
        {
            var getCountOnlyParameter = getCountOnly.HasValue ?
                new ObjectParameter("GetCountOnly", getCountOnly) :
                new ObjectParameter("GetCountOnly", typeof(bool));
    
            var masterTechAssignedToUserIdParameter = masterTechAssignedToUserId != null ?
                new ObjectParameter("MasterTechAssignedToUserId", masterTechAssignedToUserId) :
                new ObjectParameter("MasterTechAssignedToUserId", typeof(string));
    
            var marketsParameter = markets != null ?
                new ObjectParameter("Markets", markets) :
                new ObjectParameter("Markets", typeof(string));
    
            var startDateTimeUTCParameter = startDateTimeUTC.HasValue ?
                new ObjectParameter("StartDateTimeUTC", startDateTimeUTC) :
                new ObjectParameter("StartDateTimeUTC", typeof(System.DateTime));
    
            var endDateTimeUTCParameter = endDateTimeUTC.HasValue ?
                new ObjectParameter("EndDateTimeUTC", endDateTimeUTC) :
                new ObjectParameter("EndDateTimeUTC", typeof(System.DateTime));
    
            var userTypesParameter = userTypes != null ?
                new ObjectParameter("UserTypes", userTypes) :
                new ObjectParameter("UserTypes", typeof(string));
    
            var externalSystemXmlGuidListParameter = externalSystemXmlGuidList != null ?
                new ObjectParameter("ExternalSystemXmlGuidList", externalSystemXmlGuidList) :
                new ObjectParameter("ExternalSystemXmlGuidList", typeof(string));
    
            var includeReportsWithoutAFixPromiseDateParameter = includeReportsWithoutAFixPromiseDate.HasValue ?
                new ObjectParameter("IncludeReportsWithoutAFixPromiseDate", includeReportsWithoutAFixPromiseDate) :
                new ObjectParameter("IncludeReportsWithoutAFixPromiseDate", typeof(bool));
    
            var includeUnassignedReportsParameter = includeUnassignedReports.HasValue ?
                new ObjectParameter("IncludeUnassignedReports", includeUnassignedReports) :
                new ObjectParameter("IncludeUnassignedReports", typeof(bool));
    
            var includeAssignedReportsParameter = includeAssignedReports.HasValue ?
                new ObjectParameter("IncludeAssignedReports", includeAssignedReports) :
                new ObjectParameter("IncludeAssignedReports", typeof(bool));
    
            var includePowertrainReportsParameter = includePowertrainReports.HasValue ?
                new ObjectParameter("IncludePowertrainReports", includePowertrainReports) :
                new ObjectParameter("IncludePowertrainReports", typeof(bool));
    
            var includeObd1ReportsParameter = includeObd1Reports.HasValue ?
                new ObjectParameter("IncludeObd1Reports", includeObd1Reports) :
                new ObjectParameter("IncludeObd1Reports", typeof(bool));
    
            var includeAbsReportsParameter = includeAbsReports.HasValue ?
                new ObjectParameter("IncludeAbsReports", includeAbsReports) :
                new ObjectParameter("IncludeAbsReports", typeof(bool));
    
            var includeSrsReportsParameter = includeSrsReports.HasValue ?
                new ObjectParameter("IncludeSrsReports", includeSrsReports) :
                new ObjectParameter("IncludeSrsReports", typeof(bool));
    
            var adminUserId_WorkingOnFixParameter = adminUserId_WorkingOnFix != null ?
                new ObjectParameter("AdminUserId_WorkingOnFix", adminUserId_WorkingOnFix) :
                new ObjectParameter("AdminUserId_WorkingOnFix", typeof(string));
    
            var includeAdminUserWorkingOnFixParameter = includeAdminUserWorkingOnFix.HasValue ?
                new ObjectParameter("IncludeAdminUserWorkingOnFix", includeAdminUserWorkingOnFix) :
                new ObjectParameter("IncludeAdminUserWorkingOnFix", typeof(bool));
    
            var includeReportsWithFeedbackParameter = includeReportsWithFeedback.HasValue ?
                new ObjectParameter("IncludeReportsWithFeedback", includeReportsWithFeedback) :
                new ObjectParameter("IncludeReportsWithFeedback", typeof(bool));
    
            var startFixPromiseDateTimeUTCParameter = startFixPromiseDateTimeUTC.HasValue ?
                new ObjectParameter("StartFixPromiseDateTimeUTC", startFixPromiseDateTimeUTC) :
                new ObjectParameter("StartFixPromiseDateTimeUTC", typeof(System.DateTime));
    
            var endFixPromiseDateTimeUTCParameter = endFixPromiseDateTimeUTC.HasValue ?
                new ObjectParameter("EndFixPromiseDateTimeUTC", endFixPromiseDateTimeUTC) :
                new ObjectParameter("EndFixPromiseDateTimeUTC", typeof(System.DateTime));
    
            var excludeReportsWithPastDueEmailSentDateParameter = excludeReportsWithPastDueEmailSentDate.HasValue ?
                new ObjectParameter("ExcludeReportsWithPastDueEmailSentDate", excludeReportsWithPastDueEmailSentDate) :
                new ObjectParameter("ExcludeReportsWithPastDueEmailSentDate", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DiagnosticReport_LoadNoFixReports", getCountOnlyParameter, masterTechAssignedToUserIdParameter, marketsParameter, startDateTimeUTCParameter, endDateTimeUTCParameter, userTypesParameter, externalSystemXmlGuidListParameter, includeReportsWithoutAFixPromiseDateParameter, includeUnassignedReportsParameter, includeAssignedReportsParameter, includePowertrainReportsParameter, includeObd1ReportsParameter, includeAbsReportsParameter, includeSrsReportsParameter, adminUserId_WorkingOnFixParameter, includeAdminUserWorkingOnFixParameter, includeReportsWithFeedbackParameter, startFixPromiseDateTimeUTCParameter, endFixPromiseDateTimeUTCParameter, excludeReportsWithPastDueEmailSentDateParameter);
        }
    
        public virtual int PolkVehicleUSStatsGrouped_LoadBySearch(string vehicleClass, Nullable<int> minYear, Nullable<int> maxYear, Nullable<float> minCompositeReliabilityScorePercentile, Nullable<float> minFuelCostScorePercentile, Nullable<float> minCompositeSafetyScorePercentile, Nullable<float> minCompositeTCOScorePercentile, Nullable<int> pageSize, Nullable<int> currentPage, string orderBy)
        {
            var vehicleClassParameter = vehicleClass != null ?
                new ObjectParameter("VehicleClass", vehicleClass) :
                new ObjectParameter("VehicleClass", typeof(string));
    
            var minYearParameter = minYear.HasValue ?
                new ObjectParameter("MinYear", minYear) :
                new ObjectParameter("MinYear", typeof(int));
    
            var maxYearParameter = maxYear.HasValue ?
                new ObjectParameter("MaxYear", maxYear) :
                new ObjectParameter("MaxYear", typeof(int));
    
            var minCompositeReliabilityScorePercentileParameter = minCompositeReliabilityScorePercentile.HasValue ?
                new ObjectParameter("MinCompositeReliabilityScorePercentile", minCompositeReliabilityScorePercentile) :
                new ObjectParameter("MinCompositeReliabilityScorePercentile", typeof(float));
    
            var minFuelCostScorePercentileParameter = minFuelCostScorePercentile.HasValue ?
                new ObjectParameter("MinFuelCostScorePercentile", minFuelCostScorePercentile) :
                new ObjectParameter("MinFuelCostScorePercentile", typeof(float));
    
            var minCompositeSafetyScorePercentileParameter = minCompositeSafetyScorePercentile.HasValue ?
                new ObjectParameter("MinCompositeSafetyScorePercentile", minCompositeSafetyScorePercentile) :
                new ObjectParameter("MinCompositeSafetyScorePercentile", typeof(float));
    
            var minCompositeTCOScorePercentileParameter = minCompositeTCOScorePercentile.HasValue ?
                new ObjectParameter("MinCompositeTCOScorePercentile", minCompositeTCOScorePercentile) :
                new ObjectParameter("MinCompositeTCOScorePercentile", typeof(float));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            var orderByParameter = orderBy != null ?
                new ObjectParameter("OrderBy", orderBy) :
                new ObjectParameter("OrderBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PolkVehicleUSStatsGrouped_LoadBySearch", vehicleClassParameter, minYearParameter, maxYearParameter, minCompositeReliabilityScorePercentileParameter, minFuelCostScorePercentileParameter, minCompositeSafetyScorePercentileParameter, minCompositeTCOScorePercentileParameter, pageSizeParameter, currentPageParameter, orderByParameter);
        }
    
        public virtual int sp_UpdateUsertoMasterTech(string id)
        {
            var idParameter = id != null ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdateUsertoMasterTech", idParameter);
        }
    
        public virtual int User_GetMasterTechStats(Nullable<System.DateTime> p_StartDateTimeUTC, Nullable<System.DateTime> p_EndDateTimeUTC)
        {
            var p_StartDateTimeUTCParameter = p_StartDateTimeUTC.HasValue ?
                new ObjectParameter("p_StartDateTimeUTC", p_StartDateTimeUTC) :
                new ObjectParameter("p_StartDateTimeUTC", typeof(System.DateTime));
    
            var p_EndDateTimeUTCParameter = p_EndDateTimeUTC.HasValue ?
                new ObjectParameter("p_EndDateTimeUTC", p_EndDateTimeUTC) :
                new ObjectParameter("p_EndDateTimeUTC", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("User_GetMasterTechStats", p_StartDateTimeUTCParameter, p_EndDateTimeUTCParameter);
        }
    }
}
